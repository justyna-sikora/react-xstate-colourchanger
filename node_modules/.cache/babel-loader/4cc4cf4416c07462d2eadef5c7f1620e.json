{"ast":null,"code":"import{send,assign}from\"xstate\";const proxyurl=\"https://cors-anywhere.herokuapp.com/\";const rasaurl='https://assignment2nlu.herokuapp.com/model/parse';const nluRequest=text=>fetch(new Request(proxyurl+rasaurl,{method:'POST',headers:{'Origin':'https://justyna-sikora.github.io/assignment2ds'},// only required with proxy\nbody:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());//http://localhost:3000/react-xstate-colourchanger\nfunction say(text){return send(_context=>({type:\"SPEAK\",value:text}));}function listen(){return send('LISTEN');}const grammar={\"John\":{person:\"John Appleseed\"},\"Ridley\":{person:\"Ridley Scott\"},\"Steven\":{person:\"Steven Spielberg\"},\"Wes\":{person:\"Wes Andreson\"},\"Stanley\":{person:\"Stanley Kubrick\"},\"David\":{person:\"David Lynch\"},\"Ingmar\":{person:\"Ingmar Bergman\"},\"Alfred\":{person:\"Alfred Hitchcock \"},\"Tim\":{person:\"Tim Burton\"},\"on Friday\":{day:\"Friday\"},\"on Monday\":{day:\"Monday\"},\"Monday\":{day:\"Monday\"},\"Friday\":{day:\"Friday\"},\"Tuesday\":{day:\"Tuesday\"},\"Thursday\":{day:\"Thursday\"},\"on Tuesday\":{day:\"Tuesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"Wednesday\":{day:\"Wednesday\"},\"on Thursday\":{day:\"Thursday\"},\"on Saturday\":{day:\"Saturday\"},\"Saturday\":{day:\"Saturday\"},\"on Sunday\":{day:\"Sunday\"},\"Sunday\":{day:\"Sunday\"},\"6\":{time:\"6:00\"},\"at 6\":{time:\"6:00\"},\"7\":{time:\"7:00\"},\"at 7\":{time:\"7:00\"},\"8\":{time:\"8:00\"},\"at 8\":{time:\"8:00\"},\"9\":{time:\"9:00\"},\"at 9\":{time:\"9:00\"},\"10\":{time:\"10:00\"},\"at 10\":{time:\"10:00\"},\"11\":{time:\"11:00\"},\"at 11\":{time:\"11:00\"},\"12\":{time:\"12:00\"},\"at 12\":{time:\"12:00\"},\"13\":{time:\"1:00 pm\"},\"at 13\":{time:\"1:00 pm\"},\"14\":{time:\"2:00 pm\"},\"at 14\":{time:\"2:00 pm\"},\"15\":{time:\"3:00 pm\"},\"at 15\":{time:\"3:00 pm\"},\"16\":{time:\"4:00 pm\"},\"at 16\":{time:\"4:00 pm\"}};const boolGrammar={\"yes\":true,\"of course\":true,\"yep\":true,\"sure\":true,\"that's right\":true,\"nope\":false,\"no\":false,\"no way\":false,\"never\":false};export const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:{id:\"wlcm\",initial:\"prompt\",on:{RECOGNISED:{target:'query',actions:assign(context=>{return{query:context.recResult};})}},states:{prompt:{entry:say(\"What would you like to do?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I don't understand.\"),on:{ENDSPEECH:\"prompt\"}}}},query:{invoke:{id:'rasa',src:(context,event)=>nluRequest(context.query),onDone:{target:'menu',actions:[assign((context,event)=>{return{intentbest:event.data};}),(context,event)=>console.log(event.data)]},onError:{target:'welcome',actions:(context,event)=>console.log(event.data)}}},menu:{initial:\"prompt\",on:{ENDSPEECH:[{cond:context=>context.intentbest.intent.name===\"timer\",target:\"Timer\"},{cond:context=>context.intentbest.intent.name===\"todo_item\",target:\"TODOitem\"},{cond:context=>context.intentbest.intent.name===\"appointment\",target:\"Appointment\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK, noted!\"}))},nomatch:{entry:say(\"Oh sorry, I can't help you with that at the moment. Let's start over\"),on:{ENDSPEECH:\"#wlcm\"}}}},TODOitem:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"Welcome to the To do item app\")}}},Timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"Welcome to the Timer app\")}}},Appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:say(\"Let's create an appointment\")}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{day:grammar[context.recResult].day};}),target:\"duration\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\". On which day is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},duration:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>boolGrammar[context.recResult]===false,target:\"time\"},{cond:context=>boolGrammar[context.recResult]===true,target:\"confirm_meeting_whole_day\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\" on \").concat(context.day,\". Will it take the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},time:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{time:grammar[context.recResult].time};}),target:\"confirm_time\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. What time is your meeting?\"})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},confirm_meeting_whole_day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>boolGrammar[context.recResult]===false,target:\"init\"},{cond:context=>boolGrammar[context.recResult]===true,target:\"confirmed\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},confirm_time:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>boolGrammar[context.recResult]===false,target:\"who\"},{cond:context=>boolGrammar[context.recResult]===true,target:\"confirmed\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\"?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},confirmed:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Your appointment has been created!\"}))}}}}};","map":{"version":3,"sources":["/mnt/c/users/justa/documents/assignment2/react-xstate-colourchanger/src/dmAppointment.ts"],"names":["send","assign","proxyurl","rasaurl","nluRequest","text","fetch","Request","method","headers","body","then","data","json","say","_context","type","value","listen","grammar","person","day","time","boolGrammar","dmMachine","initial","states","init","on","CLICK","welcome","id","RECOGNISED","target","actions","context","query","recResult","prompt","entry","ENDSPEECH","ask","nomatch","invoke","src","event","onDone","intentbest","console","log","onError","menu","cond","intent","name","TODOitem","Timer","Appointment","who","duration","confirm_meeting_whole_day","confirm_time","confirmed"],"mappings":"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","sourcesContent":["import { MachineConfig, send, Action, assign } from \"xstate\";\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = 'https://assignment2nlu.herokuapp.com/model/parse'\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: 'POST',\n        headers: { 'Origin': 'https://justyna-sikora.github.io/assignment2ds' }, // only required with proxy\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n\n//http://localhost:3000/react-xstate-colourchanger\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send('LISTEN')\n}\n\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string } } = {\n    \"John\": { person: \"John Appleseed\" },\n    \"Ridley\": { person: \"Ridley Scott\" },\n    \"Steven\": { person: \"Steven Spielberg\" },\n    \"Wes\": { person: \"Wes Andreson\" },\n    \"Stanley\": { person: \"Stanley Kubrick\" },\n    \"David\": { person: \"David Lynch\" },\n    \"Ingmar\": { person: \"Ingmar Bergman\" },\n    \"Alfred\": { person: \"Alfred Hitchcock \"},\n    \"Tim\": { person: \"Tim Burton\" },\n\n    \"on Friday\": { day: \"Friday\" },\n    \"on Monday\": { day: \"Monday\" },\n    \"Monday\": { day: \"Monday\"},\n    \"Friday\": { day: \"Friday\" },\n    \"Tuesday\": { day: \"Tuesday\" },\n    \"Thursday\": { day: \"Thursday\" },\n    \"on Tuesday\": { day: \"Tuesday\" },\n    \"on Wednesday\": { day: \"Wednesday\" },\n    \"Wednesday\": { day: \"Wednesday\" },\n    \"on Thursday\": { day: \"Thursday\" },\n    \"on Saturday\": { day: \"Saturday\" },\n    \"Saturday\": { day: \"Saturday\" },\n    \"on Sunday\": { day: \"Sunday\" },\n    \"Sunday\": { day: \"Sunday\" },\n\n    \"6\": { time: \"6:00\" },\n    \"at 6\": { time: \"6:00\" },\n    \"7\": { time: \"7:00\" },\n    \"at 7\": { time: \"7:00\" },\n    \"8\": { time: \"8:00\" },\n    \"at 8\": { time: \"8:00\" },\n    \"9\": { time: \"9:00\" },\n    \"at 9\": { time: \"9:00\" },\n    \"10\": { time: \"10:00\" },\n    \"at 10\": { time: \"10:00\" },\n    \"11\": { time: \"11:00\" },\n    \"at 11\": { time: \"11:00\" },\n    \"12\": { time: \"12:00\" },\n    \"at 12\": { time: \"12:00\" },\n    \"13\": { time: \"1:00 pm\" },\n    \"at 13\": { time: \"1:00 pm\" },\n    \"14\": { time: \"2:00 pm\" },\n    \"at 14\": { time: \"2:00 pm\" },\n    \"15\": { time: \"3:00 pm\" },\n    \"at 15\": { time: \"3:00 pm\" },\n    \"16\": { time: \"4:00 pm\" },\n    \"at 16\": { time: \"4:00 pm\" },\n    \n}\n\nconst boolGrammar = {\n      \"yes\": true,\n      \"of course\": true,\n      \"yep\": true,\n      \"sure\": true,\n      \"that's right\": true,\n      \"nope\": false,\n      \"no\": false,\n      \"no way\": false,\n      \"never\": false,\n}\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n\n        welcome: {\n            id: \"wlcm\",\n            initial: \"prompt\",\n            on: {\n            RECOGNISED: {\n                target: 'query',\n                actions: assign((context) => { return { query: context.recResult } }),\n                    }\n                },\n                states: {\n                    prompt: {\n                        entry: say(\"What would you like to do?\"),\n                        on: { ENDSPEECH: \"ask\" }\n                    },\n                    ask: {\n                        entry: listen()\n                    },\n                    nomatch: {\n                        entry: say(\"Sorry I don't understand.\"),\n                        on: { ENDSPEECH: \"prompt\" }\n                    }\n                }\n        },\n        query: {\n            invoke: {\n            id: 'rasa',\n                    src: (context, event) => nluRequest(context.query),\n            onDone: {\n                    target: 'menu',\n                        actions: [assign((context, event) => { return {intentbest: event.data }}),\n                                (context:SDSContext, event:any) => console.log(event.data)]\n                    },\n            onError: {\n                        target: 'welcome',\n                        actions: (context,event) => console.log(event.data)\n                    }\n                }\n        },\n\t    menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [{\n                cond: (context) => context.intentbest.intent.name === \"timer\",\n                target: \"Timer\"\n                },\n\t\t        {cond: (context) => context.intentbest.intent.name === \"todo_item\",\n                target: \"TODOitem\"\n\t\t        },\n\t\t        {cond: (context) => context.intentbest.intent.name === \"appointment\",\n                target: \"Appointment\"\n\t\t        },\n                { target: \".nomatch\"}]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK, noted!`\n                    }))\n                },\n                nomatch: {entry: say(\"Oh sorry, I can't help you with that at the moment. Let's start over\"),\n                on: { ENDSPEECH: \"#wlcm\" }\n                    },\n                }\n        },\n        TODOitem: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: { entry: say(\"Welcome to the To do item app\")\n                 }\n            }\n        },\n\t    Timer: {\n\t        initial: \"prompt\",\n\t        on: { ENDSPEECH: \"init\" },\n\t        states: {\n\t    prompt: { entry: say (\"Welcome to the Timer app\")\n\t             }\n\t        }\n\t    },\n        Appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: { entry: say(\"Let's create an appointment\") }\n            }\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I don't know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        day: {\n            initial: \"prompt\",\n            on:{\n                RECOGNISED: [{\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n                    target: \"duration\"\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`\n                        })),\n\t\t            on: { ENDSPEECH: \"ask\" }\n                },\n\t\t        ask: {\n\t\t                entry: listen()\n                },\n\t            nomatch: {\n\t    \t            entry: say(\"Sorry, I don't understand\"),\n\t\t                on: { ENDSPEECH: \"prompt\" }\n\t                 }\n\t             }\n        },\n    \tduration: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (boolGrammar[context.recResult] === false),\n                    target: \"time\"\n                    },\n\t\t            {cond: (context) => (boolGrammar[context.recResult] === true),\n\t\t            target: \"confirm_meeting_whole_day\"\n\t\t            },\n                    { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person} on ${context.day}. Will it take the whole day?`\n                    })),\n\t\t                on: { ENDSPEECH: \"ask\" }\n                },\n\t\t        ask: {\n\t\t                entry: listen()\n                },\n\t            nomatch: {\n\t    \t            entry: say(\"Sorry, I don't understand\"),\n\t\t                on: { ENDSPEECH: \"prompt\" }\n\t            }\n            }\n\t    },\n\t    time: {\n            initial: \"prompt\",\n            on: { RECOGNISED: [{\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\n                    target: \"confirm_time\"\n                    },\n                    { target: \".nomatch\" }]\n\t\t    },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. What time is your meeting?`\n                        })),\n\t\t                on: { ENDSPEECH: \"ask\" }\n                },\n\t\t        ask: {\n\t\t                entry: listen()\n                },\n\t            nomatch: {\n\t                \tentry: say(\"Sorry, I don't understand\"),\n\t\t                on: { ENDSPEECH: \"prompt\" }\n\t                }\n                }\n        },\n\t    confirm_meeting_whole_day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (boolGrammar[context.recResult] === false),\n                    target: \"init\"\n                    },\n\t\t            {cond: (context) => (boolGrammar[context.recResult] === true),\n\t\t            target: \"confirmed\"\n\t\t             },\n                    { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} for the whole day?`\n                        })),\n\t\t                on: { ENDSPEECH: \"ask\" }\n                },\n\t        \task: {\n\t\t            entry: listen()\n                },\n\t            nomatch: {\n\t    \t        entry: say(\"Sorry, I don't understand\"),\n\t\t            on: { ENDSPEECH: \"prompt\" }\n\t            }\n            }\n\t    },\n \t    confirm_time: {\n            initial: \"prompt\",\n            on:  {\n                RECOGNISED: [{cond: (context) => (boolGrammar[context.recResult] === false),\n                    target: \"who\"\n                },\n\t\t        {cond: (context) => (boolGrammar[context.recResult] === true),\n\t\t        target: \"confirmed\"\n\t\t        },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                   entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n                })),\n\t\t        on: { ENDSPEECH: \"ask\" }\n                },\n\t\t        ask: {\n\t\t             entry: listen()\n                     },\n\t            nomatch: {\n\t    \t        entry: say(\"Sorry, I don't understand\"),\n\t            \ton: { ENDSPEECH: \"prompt\" }\n\t           }\n            },\n        },\n\t    confirmed: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Your appointment has been created!`\n                    }))\n                },\n\t\t    }\n\t    }\n    }\n})\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}